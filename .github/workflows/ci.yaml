name: CI

on:
  push:
    branches: [main]
  pull_request:
  workflow_dispatch:

jobs:
  build:
    name: Build (${{ matrix.system }})

    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            system: x86_64-linux
          - os: macos-latest
            system: aarch64-darwin
          - os: macos-13
            system: x86_64-darwin
          - os: ubuntu-latest
            system: aarch64-linux

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup QEMU
        if: ${{ matrix.system == 'aarch64-linux' }}
        run: |
          sudo apt update
          sudo apt install -y qemu-user-static

      - name: Install Lix
        if: ${{ matrix.system != 'aarch64-linux' }}
        env:
          NIX_INSTALLER_EXTRA_CONF: |
            trusted-user = root worker
            experimental-features = nix-command flakes
        run: |
          curl --proto '=https' --tlsv1.2 -sSf -L https://install.lix.systems/lix | sh -s -- install linux --no-confirm
          sudo systemctl restart nix-daemon

      - name: Enable aarch64-linux support
        if: ${{ matrix.system == 'aarch64-linux' }}
        run: |
          echo "extra-platforms = aarch64-linux arm-linux" | sudo tee -a /etc/nix/nix.conf
          sudo systemctl restart nix-daemon

      - name: Setup Cachix
        uses: cachix/cachix-action@v15
        with:
          name: getchoo
          authToken: ${{ secrets.CACHIX_AUTH_TOKEN }}

      - name: Evaluate flake
        run: |
          nix flake check \
            --no-build \
            --show-trace

      - name: Run build
        run: |
          nix run \
            github:Mic92/nix-fast-build -- \
            --flake '.#packages.${{ matrix.system }}' \
            --no-nom \
            --option accept-flake-config true \
            --option allow-import-from-derivation false \
            --option restrict-eval true \
            --skip-cached \
            --systems '${{ matrix.system }}'

  check:
    name: Check flake

    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Lix
        env:
          NIX_INSTALLER_EXTRA_CONF: |
            trusted-user = root worker
            experimental-features = nix-command flakes
        run: |
          curl --proto '=https' --tlsv1.2 -sSf -L https://install.lix.systems/lix | sh -s -- install linux --no-confirm
          sudo systemctl restart nix-daemon

      - name: Run check
        run: |
          nix flake check \
            --accept-flake-config \
            --no-allow-import-from-derivation \
            --print-build-logs \
            --restrict-eval \
            --show-trace

  build-gate:
    name: Build gate
    needs: build

    if: ${{ always() }}

    runs-on: ubuntu-latest

    steps:
      - name: Exit with error
        if: ${{ contains(needs.*.result, 'failure') || contains(needs.*.result, 'cancelled') }}
        run: exit 1
